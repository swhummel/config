#! /bin/bash

function compilePIS()
{
    PISSTARTTIME=$(date -d now +%s)
    FILE_STDOUT_PIS="result.out"
    FILE_STDERR_PIS="err.out"
    CMDMK="nice -n 19 make -j 4 -l 4.0 debug"
    cd $VIEW/PIS/test/integration/hepistestappl/
    if [ "$1" == "full" ]; then
        echo " *** PIS with QMAKE ***"
        #qmake4-colinux "DEFINES+=HE_PIS_TEST_WO_DVS"
        qmake -spec $QMAKESPEC "DEFINES+=HE_PIS_TEST_WO_DVS"
    else
        echo " *** PIS without QMAKE ***"
    fi
    $CMDMK 1>$FILE_STDOUT_PIS 2>$FILE_STDERR_PIS
    if [ $? -ne 0 ] ; then
        echo "...failed."
        echo "============================================================="
        cat err.out | grep -v "Project MESSAGE"
        return
    else
        echo "...success"
        return
    fi

    PISENDTIME=$(date -d now +%s)

    let PISNEEDTIME=($PISENDTIME-$PISSTARTTIME)/60
    echo "...$PISNEEDTIME min"
}

function compileAPP()
{
    APPSTARTTIME=$(date -d now +%s)
    FILE_STDOUT_APP="result.out"
    FILE_STDERR_APP="err.out"
    CMDMK="nice -n 19 make -j 4  -l 4.0 debug"
    cd $VIEW/PIS/test/apps/bld/
    if [ "$1" == "full" ]; then
        echo " *** APP with QMAKE ***"
        #qmake4-colinux apps_all.pro
        qmake -spec $QMAKESPEC
    else
        echo " *** APP without QMAKE ***"
    fi
    $CMDMK 1>$FILE_STDOUT_APP 2>$FILE_STDERR_APP
    if [ $? -ne 0 ] ; then
        echo "...failed."
        echo "============================================================="
        cat err.out | grep -v "Project MESSAGE"
        return
    else
        echo "...success"
        return
    fi

    APPENDTIME=$(date -d now +%s)

    let APPNEEDTIME=($APPENDTIME-$APPSTARTTIME)/60
    echo "...$APPNEEDTIME min"
}

# ####################################
# MAIN
# ####################################
clear;
echo "TISC_PROJECT=${TISC_PROJECT:?}" # check if var is set
isViewSet.sh
LOG_THE_TIME=0

STARTTIME=$(date -d now +%s)

if [ $? -ne 0 ]; then
   exit 1
fi

if [ $# -eq 0 ]; then
    compilePIS
    compileAPP
else
    if [ $# -eq 1 ]; then
        case "$1" in
            'pis')
                compilePIS
                ;;
            'app')
                compileAPP
                ;;
            'full')
                LOG_THE_TIME=1
                compilePIS full
                compileAPP full
                ;;
             *)
                echo "unkown parameter: $1"
                exit 1
                ;;
         esac
     else
         if [ $# -eq 2 ]; then
             case "$2" in
                 'full')
                    case "$1" in
                       'pis')
                            compilePIS full
                            ;;
                       'app')
                            compileAPP full
                            ;;
                       *)
                            echo "unkown parameter: $1"
                            exit 1
                            ;;
                    esac
                    ;;
                 *)
                    echo "unknown second parameter: $2"
                    ;;
             esac   
         else
            echo "to much parameters"
         fi #   $# != 2
     fi #   $# != 1
fi #   $# != 0

ENDTIME=$(date -d now +%s)

let NEEDTIME=($ENDTIME-$STARTTIME)/60

echo "==========================="
echo compile time: $NEEDTIME min
echo "==========================="

if [ $LOG_THE_TIME -eq 1 ]
then
    VIEW_NAME=$(echo $VIEW | sed 's!.*ccviews/!!' | sed 's!/vobs!!')
    echo $(date) - compile time: $NEEDTIME min for $VIEW_NAME >> ~/compileTimes.txt
fi

exit 0
