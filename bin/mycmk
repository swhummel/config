#! /bin/bash

function compilePIS()
{
    PISSTARTTIME=$(date -d now +%s)
    FILE_STDOUT_PIS="result.out"
    FILE_STDERR_PIS="err.out"
    CMDMK="nice -n 19 make -j 16 -l 10.0"
    if [ "$1" == "full" ]; then
        echo " *** PIS and test app with CMAKE ***"
        cmake -DTISC_PROJECT=${TISC_PROJECT} \
            -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_TOOLCHAIN_FILE=/opt/bt/cross/cmake-toolchain/Toolchain-i586-pc-linux-gnu.cmake \
            -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
            ../../../PIS/test/bld/
    else
        echo " *** PIS and test app without CMAKE ***"
    fi
    $CMDMK 1>$FILE_STDOUT_PIS 2>$FILE_STDERR_PIS
    if [ $? -ne 0 ] ; then
        echo "...failed."
        echo "============================================================="
        cat err.out | grep -v "Project MESSAGE"
        return
    else
        echo "...success"
        return
    fi

    PISENDTIME=$(date -d now +%s)

    let PISNEEDTIME=($PISENDTIME-$PISSTARTTIME)/60
    echo "...$PISNEEDTIME min"
}

# ####################################
# MAIN
# ####################################
clear;
echo "TISC_PROJECT=${TISC_PROJECT:?}" # check if var is set
isViewSet.sh
LOG_THE_TIME=0
DBG_OUT_DIR=$VIEW/build/i586-pc-linux-gnu/dbg/
mkdir -p ${DBG_OUT_DIR}
cd ${DBG_OUT_DIR}

STARTTIME=$(date -d now +%s)

if [ $? -ne 0 ]; then
   exit 1
fi

if [ ! -d $DBG_OUT_DIR ]; then
    mkdir -p $DBG_OUT_DIR
fi

if [ $# -eq 0 ]; then
    compilePIS
else
    if [ $# -eq 1 ]; then
        case "$1" in
            'full')
                LOG_THE_TIME=1
                compilePIS full
                ;;
             *)
                echo "unkown parameter: $1"
                exit 1
                ;;
         esac
     else
        echo "to much parameters"
     fi #   $# != 1
fi #   $# != 0

ENDTIME=$(date -d now +%s)

let NEEDTIME=($ENDTIME-$STARTTIME)/60

echo "==========================="
echo compile time: $NEEDTIME min
echo "==========================="

if [ $LOG_THE_TIME -eq 1 ]
then
    VIEW_NAME=$(echo $VIEW | sed 's!.*ccviews/!!' | sed 's!/vobs!!')
    echo $(date) - compile time: $NEEDTIME min for $VIEW_NAME >> ~/compileTimes.txt
fi

cd -

exit 0
